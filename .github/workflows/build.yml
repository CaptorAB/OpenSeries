name: build

on: workflow_dispatch

env:
  POETRY_VER: 1.6.1

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
        python-version: [ '3.9', '3.10', '3.11' ]

    steps:
      - name: Check out GitHub repository ${{ github.repository }}
        uses: actions/checkout@v3

      - name: Set up Python on ${{ runner.os }}
        uses: actions/setup-python@v4
        id: setup_python
        with:
          python-version: ${{ matrix.python-version }}

      - name: Restore cache
        uses: actions/cache/restore@v3
        id: restore_cache
        with:
          path: |
            ~/.local
            ./.venv
          key: venv-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('.github/workflows/build.yml') }}-${{ hashFiles('**/pyproject.toml') }}

      - name: Install Poetry ${{ env.POETRY_VER }} on Python ${{ steps.setup_python.outputs.python-version }}
        if: steps.restore_cache.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VER }}
          virtualenvs-in-project: true
          virtualenvs-path: ./.venv

      - name: Configure Poetry ${{ env.POETRY_VER }}
        if: steps.restore_cache.outputs.cache-hit != 'true'
        run: |
          poetry config cache-dir ~/.local
          poetry config virtualenvs.options.no-pip true
          poetry config virtualenvs.options.no-setuptools true
          poetry config --list

      - name: Install dependencies on Python ${{ steps.setup_python.outputs.python-version }}
        if: steps.restore_cache.outputs.cache-hit != 'true'
        run: poetry install --no-root --with dev

      - name: Check and fix with Ruff
        run: poetry run ruff check . --fix --exit-non-zero-on-fix

      - name: Format with Black
        run: poetry run black ./openseries/*.py ./tests/*.py

      - name: Type check with Mypy
        run: poetry run mypy .

      - name: Tests with Pytest
        run: poetry run coverage run -m pytest --verbose

      - name: Report coverage
        run: poetry run coverage report

      - name: Package and check
        run: |
          poetry build
          poetry check

      - name: Save cache
        if: steps.restore_cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: |
            ~/.local
            ./.venv
          key: venv-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('.github/workflows/build.yml') }}-${{ hashFiles('**/pyproject.toml') }}

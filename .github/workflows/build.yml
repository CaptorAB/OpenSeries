name: Build

on: workflow_dispatch

env:
  POETRY_VER: 1.3.2

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]

    steps:
      - name: Check out GitHub repository ${{ github.repository }}
        uses: actions/checkout@v3

      - name: Set up Python on ${{ runner.os }}
        uses: actions/setup-python@v4
        id: setup_python
        with:
          python-version-file: '.python-version'

      - name: Install Poetry ${{ env.POETRY_VER }}
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VER }}
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: .venv
          key: pydeps-${{ runner.os }}-${{ hashFiles('**/pyproject.toml') }}

      - name: Install Dependencies on Python ${{ steps.setup_python.outputs.python-version }}
        shell: bash
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: poetry install --no-root --with test

      - name: Tests with Pytest
        shell: bash
        run: poetry run coverage run -m pytest --verbose --durations=20 --durations-min=2.0

      - name: Report coverage
        shell: bash
        run: poetry run coverage report

      - name: Package and check
        shell: bash
        run: |
          poetry build
          poetry check

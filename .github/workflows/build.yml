name: build

on: workflow_dispatch

env:
  POETRY_VER: 1.7.1

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
        python-version: [ '3.9', '3.10', '3.11' ]

    steps:
      - name: Check out GitHub repository ${{ github.repository }}
        uses: actions/checkout@v3

      - name: Set up Python on ${{ runner.os }}
        uses: actions/setup-python@v4
        id: setup_python
        with:
          python-version: ${{ matrix.python-version }}

      - name: Update pip
        run: |
          if ${{ matrix.os == 'windows-latest' }}; then
            python.exe -m pip install --upgrade pip
          else
            pip install --upgrade pip
          fi

      - name: Install Poetry ${{ env.POETRY_VER }} on Python ${{ steps.setup_python.outputs.python-version }}
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ env.POETRY_VER }}

      - name: Install dependencies on Python ${{ steps.setup_python.outputs.python-version }}
        run: poetry install --with dev

      - name: Check and fix with Ruff
        run: |
          poetry run ruff check ./openseries/*.py --fix --exit-non-zero-on-fix
          poetry run ruff check ./tests/*.py --fix --exit-non-zero-on-fix

      - name: Format with Black
        run: poetry run black ./openseries/*.py ./tests/*.py

      - name: Type check with Mypy
        run: poetry run mypy .

      - name: Tests with Pytest
        run: poetry run coverage run -m pytest --verbose

      - name: Report coverage
        run: poetry run coverage report

      - name: Package and check
        run: |
          poetry build
          poetry check

name: TestsWithSplit

on:
  push:
    branches:
      - "*" # matches every branch that doesn't contain a '/'
      - "*/*" # matches every branch containing a single '/'
      - "**" # matches every branch

jobs:
  testing:
    strategy:
      fail-fast: false
      matrix:
        group: [1, 2, 3, 4, 5]
    runs-on: ubuntu-latest

    steps:
    - name: Check out GitHub repository ${{ github.repository }}
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      id: py
      with:
        python-version-file: '.python-version'
        cache: 'pip'

    - name: Install dependencies on Python ${{ steps.py.outputs.python-version }}
      run: |
        ${{ steps.py.outputs.python-path }} -m pip install --upgrade .[test]
        ${{ steps.py.outputs.python-path }} -m pip install --upgrade pytest-split

    - name: Tests with Pytest
      run: PYTHONPATH=${PWD} coverage run -m pytest --verbose --capture=no --splits 5 --group ${{ matrix.group }} --splitting-algorithm least_duration ./

    - name: Upload coverage
      uses: actions/upload-artifact@v3
      with:
        name: coverage${{ matrix.group }}
        path: .coverage

  coverage:
    needs: testing
    runs-on: ubuntu-latest

    steps:
      - name: Check out GitHub repository ${{ github.repository }}
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        id: pycov
        with:
          python-version-file: '.python-version'

      - name: Install coverage on Python ${{ steps.pycov.outputs.python-version }}
        run: ${{ steps.pycov.outputs.python-path }} -m pip install --upgrade coverage

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Report coverage
        run: |
          coverage combine coverage*/.coverage*
          coverage report
name: "Install Environment"
description: "Install environment, loads cached venv if applicable, and performs
miscellaneous other operations"

inputs:
  cache_version:
    description: 'Value gets appended to the cache key and will therefore invalidate the cache if it changes'
    required: true
  python-version:
    description: 'Python version'
    type: string
    required: true
  os:
    description: 'OS'
    type: string
    required: true

runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      id: py
      with:
        python-version: ${{ inputs.python-version }}

    - name: Use GNU tar
      shell: cmd
      run: |
        echo "Adding GNU tar to PATH"
        echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"
      if: ${{ runner.os == 'windows-latest' }}

    - name: Write cache version
      shell: bash
      run: echo $CACHE_VERSION >> cache_version
      env:
        CACHE_VERSION: ${{inputs.cache_version}}

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: |
          .venv
          poetry-lock
        key: venv-${{ runner.os }}-python-${{ inputs.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('cache_version') }}

    - name: Install and configure Poetry
      shell: bash
      run: |
        python -m pip install poetry==1.3.2
        python -m poetry config virtualenvs.in-project true

    - name: Install Project
      shell: bash
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --with test

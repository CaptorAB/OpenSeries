name: 'Install Environment and Dependencies'
description: 'Install environment, loads cached venv and install dependencies'

inputs:
  poetry_arg:
    description: 'Controlling which poetry group to install from'
    type: string

runs:
  using: 'composite'
  steps:
    - name: Check out GitHub repository ${{ github.repository }}
      uses: actions/checkout@v3

    - name: Set up Python on ${{ runner.os }}
      uses: actions/setup-python@v4
      id: py
      with:
        python-version-file: '.python-version'

    - name: Load cached $HOME/.local
      uses: actions/cache@v3
      with:
        path: ~/.local
        key: dotlocal-${{ runner.os }}-python-${{ steps.py.outputs.python-version }}-${{ hashFiles('.github/workflows/build.yml') }}

    - name: Install Poetry on Python ${{ steps.py.outputs.python-version }}
      shell: bash
      run: |
        curl -O -sSL https://install.python-poetry.org/install-poetry.py
        python install-poetry.py -y --version 1.3.2
        echo "PATH=${HOME}/.poetry/bin:${PATH}" >> $GITHUB_ENV
        rm install-poetry.py

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: ./.venv
        key: venv-${{ runner.os }}-python-${{ steps.py.outputs.python-version }}-${{ hashFiles('**/poetry.lock', env.GITHUB_WORKFLOW) }}

    - name: Install Dependencies
      shell: bash
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: |
        poetry env use ${{ steps.py.outputs.python-version }}
        poetry install --no-root ${{ inputs.poetry_arg }}
